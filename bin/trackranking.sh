#!/bin/bash
# argument $1 is the path to the directory containing the instances
#path=$1
#rotate_conf=$path/aspexec_rotate.conf
#exclude_file=BROKEN
#stat_file=stat
#runmeans_file=$path/runmeans.dat

path=$1

#### TODO:
#### (1) Add Shellscript Code that reads the files generated by statsbm_r.sh
####     into variable tracks

## INPUT:
## host | track_id | solver_id | bm_id | diskrepanz | score
## OUTPUT:
## host | track_id | solver_id | diskrepanz | score

bm_rscipt_one="
## Calculate Track-Score
score_all <- read.table(\"$path""trackTMP.dat\", header=FALSE);

host <- score_all\$V1;
trackid <- score_all\$V2;
solverid <- score_all\$V3;
diskrepanz <- score_all\$V5;
score <- score_all\$V6;

output <- data.frame(host,trackid,solverid,diskrepanz,score);
output <- output[order(-output\$score),];
#### TODO: Add Shellscript Code: Output in File and save!
write.table(output,stdout(),20,col.names=FALSE,row.names=FALSE);"

bm_rscipt="
## Calculate Track-Score
score_all <- read.table(\"$path""trackTMP.dat\", header=FALSE);

# iterate through all other statsbm-files and do the following for every statsbm:
dat <- read.table('stdin',header=FALSE,as.is=TRUE);
lbmscore <- nrow(dat);
i <- 1;

#write.table(dat,stdout());

while(i <= lbmscore){
  newscore <- 0;
  newscore <- score_all\$V6[as.character(score_all\$V3) == as.character(dat[i,3])]  + dat[i,6];
  if(length(newscore) == 0){
    V1 <- dat[i,1]; V2 <- dat[i,2]; V3 <- dat[i,3]; V4 <- dat[i,4]; V5 <- dat[i,5]; V6 <- dat[i,6];
    score_all <- rbind(score_all, data.frame(V1,V2,V3,V4,V5,V6));
  } else {
    if(dat[i,5] == 1){
      score_all\$V5[as.character(score_all\$V3) == as.character(dat[i,3])] <- 1;
    }
    score_all\$V6[as.character(score_all\$V3) == as.character(dat[i,3])] <- newscore;
  }
  i <- i+1;
}


host <- score_all\$V1;
trackid <- score_all\$V2;
solverid <- score_all\$V3;
diskrepanz <- score_all\$V5;
score <- score_all\$V6;

output <- data.frame(host,trackid,solverid,diskrepanz,score);
output <- output[order(-output\$score),];
#### TODO: Add Shellscript Code: Output in File and save!
write.table(output,stdout(),20,col.names=FALSE,row.names=FALSE);"

# for each benchmark
initial=true
inp=""
row=""
for b in $(find $path -mindepth 1 -maxdepth 1 -type d); do
	if [ "$initial" == "true" ];then
		cp $b/score.dat $path""trackTMP.dat
		initial=false
	else
		row=$(cat $b/score.dat)
		inp=$(echo "$inp\n$row")
#		inp=$(cat $b/score.dat)
#		echo -e "$inp" | Rscript <(echo "$bm_rscipt") > $path/trackTMP_2.dat
#		mv $path/trackTMP_2.dat $path/trackTMP.dat
	fi
done
if [ "$inp" == "" ]; then
	Rscript <(echo "$bm_rscipt_one") > $path/trackTMP_2.dat
else
	echo -e "$inp" | Rscript <(echo "$bm_rscipt") > $path/trackTMP_2.dat
fi
mv $path/trackTMP_2.dat $path/trackTMP.dat
cp $path/trackTMP.dat $path/track.dat
