# benchmark execution wrapper

basedir = $ENV(HOME)
runas = aspck

executable = /home/aspcomp/condor-par/check_instance.sh
universe   = vanilla

# working dir will be set by condor_dagman
#initialdir = /path/to/run/logs

#input     = test.data # hm, stdin...

# output and error is hopefully empty
output     = check_$(cluster)_$(process).out
error      = check_$(cluster)_$(process).err

# condor log will be set by condor_dagman
#log =


# condor will transfer the executable, input, output, error back to the
# submission machine
should_transfer_files = YES
when_to_transfer_output = ON_EXIT

notification = Error
notify_user = tkren@kr.tuwien.ac.at

requirements = machine == "lion.kr.tuwien.ac.at"





request_cpus = 1
request_memory = 4096

environment = TIMEOUT=60 ; MEMOUT=$$([TARGET.Memory * 1024]); MAXFILESIZE=10240

# arguments will be set by condor_dagman
#
# DAG spliced nodes have the form JOB+NODE.  In our setting we set JOB
# to R/tTT/bBB/sSS/iIIII/rRR/NNN from which we can extract the information
# for building the arguments for our executable.
#
# 0 2   6   10  14    20   25  29
# R/t01/b01/s01/i0001/r000/000+CHECK
#
theinstance=$$([substr(""$(jobname)"",2,-14)])
therun=$$([substr(""$(jobname)"",2,-9)])
arguments  = "$(runas) $(basedir)/profiles/$(theinstance)/validate.profile $(basedir)/$(therun) /home/$(runas)/$(therun)"

# number of runs
queue 1
